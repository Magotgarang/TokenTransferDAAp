<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Token Transfer DApp</title>
    <style>
        body { font-family: Arial, sans-serif; }
        #connectButton { margin: 20px; padding: 10px 20px; background-color: #4CAF50; color: white; cursor: pointer; }
        #transferButton { padding: 10px 20px; background-color: #008CBA; color: white; cursor: pointer; }
        #balance { margin: 20px; font-size: 20px; }
        #address { margin-top: 20px; }
    </style>
</head>
<body>

<h2>ERC-20 Token Transfer</h2>
<button id="connectButton">Connect Wallet</button>
<p id="address"></p>
<p id="balance"></p>

<h3>Transfer Tokens</h3>
<input type="text" id="toAddress" placeholder="Recipient Address">
<input type="number" id="amount" placeholder="Amount">
<button id="transferButton">Transfer Tokens</button>

<script src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.6.1/web3.min.js"></script>
<script>
    let web3;
    let contract;
    let account;
    const tokenAddress = "YOUR_CONTRACT_ADDRESS"; // Replace with your deployed contract address
    const tokenABI = [
        {
            "constant": true,
            "inputs": [{"name": "account", "type": "address"}],
            "name": "balanceOf",
            "outputs": [{"name": "", "type": "uint256"}],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {"name": "recipient", "type": "address"},
                {"name": "amount", "type": "uint256"}
            ],
            "name": "transfer",
            "outputs": [{"name": "", "type": "bool"}],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ];

    // Connect wallet
    async function connectWallet() {
        if (typeof window.ethereum !== 'undefined') {
            web3 = new Web3(window.ethereum);
            await window.ethereum.request({ method: 'eth_requestAccounts' });
            account = (await web3.eth.getAccounts())[0];
            document.getElementById('address').textContent = "Connected Account: " + account;
            contract = new web3.eth.Contract(tokenABI, tokenAddress);
            getBalance();
        } else {
            alert("Please install MetaMask!");
        }
    }

    // Get token balance
    async function getBalance() {
        const balance = await contract.methods.balanceOf(account).call();
        document.getElementById('balance').textContent = "Token Balance: " + balance;
    }

    // Transfer tokens
    async function transferTokens() {
        const toAddress = document.getElementById('toAddress').value;
        const amount = document.getElementById('amount').value;
        if (web3.utils.isAddress(toAddress) && amount > 0) {
            await contract.methods.transfer(toAddress, web3.utils.toWei(amount, 'ether')).send({ from: account });
            getBalance();
        } else {
            alert("Invalid address or amount");
        }
    }

    document.getElementById('connectButton').onclick = connectWallet;
    document.getElementById('transferButton').onclick = transferTokens;
</script>
</body>
</html>
